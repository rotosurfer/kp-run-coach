plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'com.github.node-gradle.node' version '5.0.0'
}

group = 'com.kpruncoach'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly 'org.xerial:sqlite-jdbc'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.hibernate.orm:hibernate-community-dialects'
    
    testRuntimeOnly 'com.h2database:h2'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

// Frontend build configuration
node {
    version = '18.17.0'
    npmVersion = '9.6.7'
    workDir = file("${project.projectDir}/src/frontend")
    nodeProjectDir = file("${project.projectDir}/src/frontend")
}

task buildFrontend(type: NpmTask, dependsOn: npmInstall) {
    description = 'Build frontend'
    workingDir = file("${project.projectDir}/src/frontend")
    args = ['run', 'build']
    inputs.dir('src/frontend/src')
    inputs.file('src/frontend/package.json')
    outputs.dir('src/frontend/build')
}

task copyFrontendBuild(type: Copy, dependsOn: buildFrontend) {
    description = 'Copy frontend build to Spring Boot static resources'
    from 'src/frontend/build'
    into 'src/main/resources/static'
}

processResources.dependsOn copyFrontendBuild
